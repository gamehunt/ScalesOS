cmake_minimum_required(VERSION 3.23)
include(ExternalProject)

project(Scales-Libs VERSION 1.0.0)

ExternalProject_Add(
    pthread
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/pthread/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/pthread/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libfb
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libfb/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libfb/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libtga
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libtga/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libtga/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libjpeg
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libjpeg/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libjpeg/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libinput
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libinput/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libinput/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libcompose
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libcompose/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libcompose/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

ExternalProject_Add(
    libwidgets
    SOURCE_DIR  ${PROJECT_SOURCE_DIR}/libwidgets/
    BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/libwidgets/
    CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
)

install(CODE "MESSAGE(\"Libraries installed.\")")
